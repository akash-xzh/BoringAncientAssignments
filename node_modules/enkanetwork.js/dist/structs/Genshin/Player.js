"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Player = void 0;
const client_1 = require("../../client");
/**
 * A class that structures the data of the player.
 */
class Player {
    /**
     * The player's username.
     */
    username;
    /**
     * The player's level types data.
     */
    levels;
    /**
     * The player's signature.
     */
    signature;
    /**
     * The player's namecard.
     */
    namecard;
    /**
     * The player's finished achievements count.
     */
    achievements;
    /**
     * The player's abyss data.
     */
    abyss;
    /**
     * The player's showcase characters data.
     */
    showcase;
    /**
     * A list of the player's namecards data.
     */
    namecardsList;
    /**
     * The player's profile picture data.
     */
    profilePicture;
    /**
     * Creates a new `Player` instance.
     * @param data - The data of the player.
     * @param language - The language to get the names.
     */
    constructor(data, language) {
        const { genshin: genshinFinder } = new client_1.AssetFinder({ language });
        this.username = data.nickname || "";
        this.levels = data.level
            ? new PlayerLevels(data)
            : {};
        this.signature = data.signature || "";
        this.namecard = data.nameCardId
            ? new Namecard(data.nameCardId, genshinFinder)
            : {};
        this.achievements = data.finishAchievementNum || 0;
        this.abyss =
            data.towerFloorIndex && data.towerLevelIndex
                ? new Abyss(data)
                : {};
        this.showcase = data.showAvatarInfoList
            ? data.showAvatarInfoList.map((data) => new Showcase(data, genshinFinder))
            : [];
        this.namecardsList = data.showNameCardIdList
            ? data.showNameCardIdList.map((data) => new Namecard(data, genshinFinder))
            : [];
        this.profilePicture = data.profilePicture
            ? new ProfilePicture(data.profilePicture, genshinFinder)
            : {};
    }
}
exports.Player = Player;
/**
 * A class that structures the player's different level types.
 */
class PlayerLevels {
    /**
     * The player's world level.
     */
    world;
    /**
     * The player's adventure rank.
     */
    rank;
    /**
     * Creates a new `PlayerLevels` instance.
     * @param data - The data of the player.
     */
    constructor(data) {
        this.world = data.worldLevel || "";
        this.rank = data.level || "";
    }
}
/**
 * A class that structures the player's namecards data.
 */
class Namecard {
    /**
     * The id of the namecard.
     */
    id;
    /**
     * The assets of the namecard.
     */
    assets;
    /**
     * The name of the namecard.
     */
    name;
    /**
     * Creates a new `Namecard` instance.
     * @param namecardId - The ID of the namecard.
     * @param language - The language to get the name.
     */
    constructor(namecardId, genshinFinder) {
        this.id = namecardId || "";
        this.assets = namecardId
            ? genshinFinder.namecard(this.id).assets
            : {};
        this.name = namecardId
            ? genshinFinder.namecard(this.id).name
            : "";
    }
}
/**
 * A class that structures the player's abyss data.
 */
class Abyss {
    /**
     * The current floor of the player's abyss.
     */
    floor;
    /**
     * The current chamber of the player's abyss.
     */
    chamber;
    /**
     * Creates a new `Abyss` instance.
     * @param data - The data of the player.
     */
    constructor(data) {
        this.floor = data.towerFloorIndex || "";
        this.chamber = data.towerLevelIndex || "";
    }
}
/**
 * A class that structures the player's showcase characters data.
 */
class Showcase {
    /**
     * The ID of the character.
     */
    characterId;
    /**
     * The level of the character.
     */
    level;
    /**
     * The ID of the character's costume.
     */
    costumeId;
    /**
     * The assets of the character.
     */
    assets;
    /**
     * The name of the character.
     */
    name;
    /**
     * Creates a new `Showcase` instance.
     * @param data - The data of the player's showcase.
     * @param language - The language to get the names.
     */
    constructor(data, genshinFinder) {
        this.characterId = data.avatarId || "";
        this.level = data.level || "";
        this.costumeId = data.costumeId || "";
        this.assets = data.avatarId
            ? genshinFinder.character(this.characterId).assets
            : {};
        this.name = data.avatarId
            ? genshinFinder.character(this.characterId).name
            : "";
    }
}
/**
 * A class that structures the player's profile picture data.
 */
class ProfilePicture {
    /**
     * The ID of the character.
     */
    characterId;
    id;
    /**
     * The assets of the character.
     */
    assets;
    /**
     * The name of the character.
     */
    name;
    /**
     * Creates a new `ProfilePicture` instance.
     * @param data - The data of the profile picture.
     * @param language - The language to get the name.
     */
    constructor(data, genshinFinder) {
        this.characterId = data.avatarId || "";
        this.id = data.id || "";
        this.assets = data.avatarId
            ? genshinFinder.character(this.characterId).assets
            : data.id
                ? genshinFinder.profilePicture(data.id).assets
                : {};
        this.name = data.avatarId
            ? genshinFinder.character(this.characterId).name
            : data.id
                ? genshinFinder.profilePicture(data.id).name
                : "";
    }
}
